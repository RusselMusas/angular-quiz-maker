{"version":3,"file":"src_app_quiz-results_quiz-results_module_ts.c37a9054ae1fa937.js","mappings":"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","sources":["./src/app/quiz-results/quiz-results.component.html","./src/app/quiz-results/quiz-results.component.ts","./src/app/quiz-results/quiz-results.module.ts"],"sourcesContent":["<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-8 mx-auto pt-2\">\n            <h1 class=\"text-center text-uppercase mb-4 mt-2 font-weight-bold\">Results</h1>\n            <div class=\"form-inline row px-4\">\n                <div class=\"form-group mb-4 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question1?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question1?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question1?.correct_answer, quizResponse?.inputResponse1),\n                                    'btn-success': isCorrectAnswer(element, question1?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question1?.correct_answer, quizResponse?.inputResponse1)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse1\" \n                                [id]=\"'q1' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question2?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question2?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question2?.correct_answer, quizResponse?.inputResponse2),\n                                    'btn-success': isCorrectAnswer(element, question2?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question2?.correct_answer, quizResponse?.inputResponse2)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse2\" \n                                [id]=\"'q2' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question3?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question3?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question3?.correct_answer, quizResponse?.inputResponse3),\n                                    'btn-success': isCorrectAnswer(element, question3?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question3?.correct_answer, quizResponse?.inputResponse3)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse3\" \n                                [id]=\"'q3' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question4?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question4?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question4?.correct_answer, quizResponse?.inputResponse4),\n                                    'btn-success': isCorrectAnswer(element, question4?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question4?.correct_answer, quizResponse?.inputResponse4)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse4\" \n                                [id]=\"'q4' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group mb-2 col-12\">\n                    <div class=\"form-group question\">\n                        <p class=\"text-small\">{{ question5?.question | decodeHtml }}</p>\n                    </div>\n                    <div class=\"form-group radios\">\n                        <ng-container *ngFor=\"let element of question5?.all_answers; let j = index\">\n                            <button class=\"btn btn-sm\" \n                                [ngClass]=\"{\n                                    'btn-outline-success': isIndifferent(element, question5?.correct_answer, quizResponse?.inputResponse5),\n                                    'btn-success': isCorrectAnswer(element, question5?.correct_answer),\n                                    'btn-danger': isIncorrectAnswer(element, question5?.correct_answer, quizResponse?.inputResponse5)\n                                }\"\n                                [value]=\"element\" name=\"inputResponse5\" \n                                [id]=\"'q5' + j\">{{ element | decodeHtml }}</button>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"form-group button mb-2 mt-4 col-12 justify-content-center\">\n                    <div class=\"my-2 px-3\" [ngClass]=\"{\n                        'bg-danger': quizScore <= 1,\n                        'bg-warning': quizScore > 1 && quizScore <= 3,\n                        'bg-success': quizScore > 3\n                    }\">{{ 'You scored ' + quizScore + ' out of ' + totalQuiz }}</div>\n                </div>\n                <div class=\"form-group button mb-2 mt-4 col-12 justify-content-center\">\n                    <button type=\"button\" class=\"btn btn-sm w-75 btn-secondary\" \n                            routerLink=\"/questions\">Create a new quiz</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormResponse, QuizQuestion, Result } from 'src/app/core/models/quiz-question.model';\n\n@Component({\n  selector: 'app-quiz-results',\n  templateUrl: './quiz-results.component.html',\n  styleUrls: ['./quiz-results.component.css']\n})\nexport class QuizResultsComponent implements OnInit {\n\n  quizResponse: FormResponse | undefined;\n  quizQuestion: QuizQuestion | undefined;\n  question1: Result | undefined;\n  question2: Result | undefined;\n  question3: Result | undefined;\n  question4: Result | undefined;\n  question5: Result | undefined;\n  quizScore: number = 0;\n  totalQuiz: number = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.quizResponse = window.history.state['dataR'];\n    this.quizQuestion = window.history.state['dataQ'];\n    this.question1 = this.quizQuestion?.results[0];\n    this.question2 = this.quizQuestion?.results[1];\n    this.question3 = this.quizQuestion?.results[2];\n    this.question4 = this.quizQuestion?.results[3];\n    this.question5 = this.quizQuestion?.results[4];\n    // console.log(this.quizQuestion);\n    // console.log(this.quizResponse);\n    this.quizScore = this.computeScore(this.quizResponse ? this.quizResponse : undefined);\n    this.totalQuiz = this.quizQuestion?.results? this.quizQuestion.results.length : 0;\n  }\n\n  isIndifferent(element: string, correct_answer: string | undefined, inputResponse: string | undefined) {\n    return element !== correct_answer && element !== inputResponse;\n  }\n\n  isCorrectAnswer(element: string, correct_answer: string | undefined) {\n    return element === correct_answer;\n  }\n\n  isIncorrectAnswer(element: string, correct_answer: string | undefined, inputResponse: string | undefined) {\n    return element !== correct_answer && element === inputResponse;\n  }\n\n  computeScore(quizResponse: FormResponse | undefined): number {\n    let score: number = 0;\n    if(!quizResponse) {\n      return score;\n    }\n\n    this.quizQuestion?.results.forEach(function (arrayItem, index) {\n      if(index === 0 && arrayItem.correct_answer === quizResponse.inputResponse1) {\n        score += 1;\n      }\n      if(index === 1 && arrayItem.correct_answer === quizResponse.inputResponse2) {\n        score += 1;\n      }\n      if(index === 2 && arrayItem.correct_answer === quizResponse.inputResponse3) {\n        score += 1;\n      }\n      if(index === 3 && arrayItem.correct_answer === quizResponse.inputResponse4) {\n        score += 1;\n      }\n      if(index === 4 && arrayItem.correct_answer === quizResponse.inputResponse5) {\n        score += 1;\n      }\n    });\n\n    return score;\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { QuizResultsComponent } from './quiz-results.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ QuizResultsComponent ],\r\n  imports: [\r\n    RouterModule.forChild([\r\n      { path: '', component: QuizResultsComponent }\r\n    ]),\r\n    SharedModule\r\n  ],\r\n  exports: [],\r\n  providers: []\r\n})\r\nexport class QuizResultsModule { }\r\n"],"names":["i0","QuizResultsComponent","constructor","ngOnInit","quizResponse","window","history","state","quizQuestion","question1","results","question2","question3","question4","question5","quizScore","computeScore","undefined","totalQuiz","length","isIndifferent","element","correct_answer","inputResponse","isCorrectAnswer","isIncorrectAnswer","score","forEach","arrayItem","index","inputResponse1","inputResponse2","inputResponse3","inputResponse4","inputResponse5","selectors","decls","vars","consts","template","RouterModule","SharedModule","QuizResultsModule","forChild","path","component","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}